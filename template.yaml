AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  Sample SAM Template for github-actions-with-aws-sam

Globals:
  Function:
    Timeout: 100
    LoggingConfig:
      LogFormat: JSON

Resources:
  NetCodeWebAPIServerless:
    Type: AWS::Serverless::Function
    Properties:
      Description: A Dot Net 8 Serverless Function 
      CodeUri: ./src/ServerlessAPI/
      Handler: ServerlessAPI
      Runtime: dotnet8
      MemorySize: 1024
      Environment:
        Variables:
          SAMPLE_TABLE: !Ref SampleTable
      Policies:
        - DynamoDBCrudPolicy:
            TableName: github-actions-with-aws-samBookCatalog
        - SQSPollerPolicy:
            QueueName: !GetAtt ProcessingQueue.QueueName
      Events:
        ProxyResource:
          Type: HttpApi
          Properties:
            PayloadFormatVersion: '2.0'
            Path: /test
            Method: ANY
        RootResource:
          Type: HttpApi
          Properties:
            PayloadFormatVersion: '2.0'
            Path: /
            Method: ANY
        SQSEvent:
          Type: SQS
          Properties:
            Queue: !GetAtt ProcessingQueue.Arn
            BatchSize: 10
            FunctionResponseTypes:
              - ReportBatchItemFailures

  HttpApi:
    Type: AWS::Serverless::HttpApi
    Properties:
      StageName: Prod

  SampleTable:
    Type: AWS::Serverless::SimpleTable
    Properties:
      TableName: github-actions-with-aws-samBookCatalog
      PrimaryKey:
        Name: Id
        Type: String
      ProvisionedThroughput:
        ReadCapacityUnits: 2
        WriteCapacityUnits: 2

  # Main processing queue with DLQ configuration
  ProcessingQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub ${AWS::StackName}-queue
      MessageRetentionPeriod: 1800  # 30 minutes in seconds
      VisibilityTimeout: 120
      RedrivePolicy:
        deadLetterTargetArn: !GetAtt ProcessingDLQ.Arn
        maxReceiveCount: 3 # Messages will be moved to DLQ after 3 failed attempts

  # Dead Letter Queue
  ProcessingDLQ:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub ${AWS::StackName}-dlq

Outputs:
  WebEndpoint:
    Description: API Gateway endpoint URL
    Value: !Sub "https://${HttpApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/"
